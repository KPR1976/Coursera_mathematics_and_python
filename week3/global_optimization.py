import numpy as np
from scipy.optimize import minimize, differential_evolution
from math import sin, exp
import matplotlib.pyplot as plt
"""
Напишите на Питоне функцию, вычисляющую значение f(x) по известному x.
Будьте внимательны: не забывайте про то, что по умолчанию в питоне целые числа делятся нацело,
и о том, что функции sin и exp нужно импортировать из модуля math.
"""
def f(x):
    return sin(x / 5.0) * exp(x / 10.0) + 5 * exp(-x / 2.0)

"""
Изучите документацию и примеры использования функции scipy.optimize.differential_evolution.
Обратите внимание, что границы значений аргументов функции представляют собой список кортежей (list, в который помещены объекты типа tuple).
Даже если у вас функция одного аргумента, возьмите границы его значений в квадратные скобки, чтобы передавать в этом параметре список из одного кортежа,
т.к. в реализации scipy.optimize.differential_evolution длина этого списка используется чтобы определить количество аргументов функции.
"""
bounds = [(0,60)]
#print(differential_evolution(f, bounds))

"""
Запустите поиск минимума функции f(x) с помощью дифференциальной эволюции на промежутке [1, 30].
Полученное значение функции в точке минимума - ответ в задаче 2.
Запишите его с точностью до второго знака после запятой. В этой задаче ответ - только одно число.
"""

bounds = [(1,30)]
print(differential_evolution(f, bounds))
